C51 COMPILER V9.05   12864                                                                 06/21/2020 23:05:30 PAGE 1   


C51 COMPILER V9.05, COMPILATION OF MODULE 12864
OBJECT MODULE PLACED IN .\OutPut\12864.obj
COMPILER INVOKED BY: C:\Keil_C51\C51\BIN\C51.EXE User\12864.c LARGE OPTIMIZE(SIZE) BROWSE DEBUG OBJECTEXTEND PRINT(.\Out
                    -Put\12864.lst) OBJECT(.\OutPut\12864.obj)

line level    source

   1          /*******************************************************************************
   2          *  描述:                                                                       *
   3          *      12864标准字库液晶演示 数据p0,控制p3                                     *
   4          ********************************************************************************/
   5          #include "stc15f2k60s2.h"
   6          #include <intrins.h>
   7          #define uchar unsigned char
   8          #define uint  unsigned int
   9          /************* 12864LCD引脚定义 *************/
  10          #define LCD_data  P0       //数据口
  11          sbit LCD_RS  =  P3^5;      //寄存器选择输入 
  12          sbit LCD_RW  =  P3^6;      //液晶读/写控制
  13          sbit LCD_EN  =  P3^7;      //液晶使能控制
  14          sbit LCD_PSB =  P4^6;      //串/并方式控制
  15          sbit LCD_RST =  P4^7;      //液晶复位端口
  16          
  17          
  18          #define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
  19          /*********************************************************/
  20          uchar code  DIS1[] = {"    启光电子    "};
  21          uchar code  DIS2[] = {"    STC15       "};
  22          uchar code  DIS3[] = {"   LCD12864  "};
  23          uchar code  DIS4[] = {"    12864test   "};
  24          /*********************************************************/
  25          
  26          
  27          /*******************************************************************/
  28          /*                                                                 */
  29          /*  延时函数                                                       */
  30          /*                                                                 */
  31          /*******************************************************************/
  32          void delay(int ms)
  33          {
  34   1          while(ms--)
  35   1              {
  36   2            uchar i;
  37   2                for(i=0;i<150;i++)  
  38   2                 {
  39   3                  _nop_();                       
  40   3                      _nop_();
  41   3                      _nop_();
  42   3                      _nop_();
  43   3                 }
  44   2              }
  45   1      }       
  46          /*******************************************************************/
  47          /*                                                                 */
  48          /*  延时函数                                                       */
  49          /*                                                                 */
  50          /*******************************************************************/
  51          void delay1(int ms)
  52          {
  53   1          while(ms--)
  54   1              {
C51 COMPILER V9.05   12864                                                                 06/21/2020 23:05:30 PAGE 2   

  55   2            uchar y;
  56   2                for(y=0;y<100;y++) ; 
  57   2              }
  58   1      }                       
  59          /*******************************************************************/
  60          /*                                                                 */
  61          /*检查LCD忙状态                                                    */
  62          /*lcd_busy为1时，忙，等待。lcd-busy为0时,闲，可写指令与数据。      */
  63          /*                                                                 */
  64          /*******************************************************************/
  65          bit lcd_busy()
  66           {                          
  67   1          bit result;
  68   1          LCD_RS = 0;
  69   1          LCD_RW = 1;
  70   1          LCD_EN = 1;
  71   1          delayNOP();
  72   1          result = (bit)(P0&0x80);
  73   1          LCD_EN = 0;
  74   1          return(result); 
  75   1       }
  76          /*******************************************************************/
  77          /*                                                                 */
  78          /*写指令数据到LCD                                                  */
  79          /*RS=L，RW=L，E=高脉冲，D0-D7=指令码。                             */
  80          /*                                                                 */
  81          /*******************************************************************/
  82          void lcd_wcmd(uchar cmd)
  83          {                          
  84   1         while(lcd_busy());
  85   1          LCD_RS = 0;
  86   1          LCD_RW = 0;
  87   1          LCD_EN = 0;
  88   1          _nop_();
  89   1          _nop_(); 
  90   1          P0 = cmd;
  91   1          delayNOP();
  92   1          LCD_EN = 1;
  93   1          delayNOP();
  94   1          LCD_EN = 0;  
  95   1      }
  96          /*******************************************************************/
  97          /*                                                                 */
  98          /*写显示数据到LCD                                                  */
  99          /*RS=H，RW=L，E=高脉冲，D0-D7=数据。                               */
 100          /*                                                                 */
 101          /*******************************************************************/
 102          void lcd_wdat(uchar dat)
 103          {                          
 104   1         while(lcd_busy());
 105   1          LCD_RS = 1;
 106   1          LCD_RW = 0;
 107   1          LCD_EN = 0;
 108   1          P0 = dat;
 109   1          delayNOP();
 110   1          LCD_EN = 1;
 111   1          delayNOP();
 112   1          LCD_EN = 0; 
 113   1      }
 114          /*******************************************************************/
 115          /*                                                                 */
 116          /*  LCD初始化设定                                                  */
C51 COMPILER V9.05   12864                                                                 06/21/2020 23:05:30 PAGE 3   

 117          /*                                                                 */
 118          /*******************************************************************/
 119          void lcd_init()
 120          { 
 121   1          LCD_PSB = 1;         //并口方式
 122   1          
 123   1              LCD_RST = 0;             //液晶复位
 124   1          delay(3);                   
 125   1          LCD_RST = 1;      
 126   1          delay(3);
 127   1          
 128   1          lcd_wcmd(0x34);      //扩充指令操作
 129   1          delay(5);
 130   1          lcd_wcmd(0x30);      //基本指令操作
 131   1          delay(5);
 132   1          lcd_wcmd(0x0C);      //显示开，关光标
 133   1          delay(5);
 134   1          lcd_wcmd(0x01);      //清除LCD的显示内容
 135   1          delay(5);
 136   1      }
 137          /*********************************************************/
 138          /*                                                       */
 139          /* 设定显示位置                                          */
 140          /*                                                       */
 141          /*********************************************************/
 142          void lcd_pos(uchar X,uchar Y)
 143          {                          
 144   1         uchar  pos;
 145   1         if (X==1)
 146   1           {X=0x80;}
 147   1         else if (X==2)
 148   1           {X=0x90;}
 149   1         else if (X==3)
 150   1           {X=0x88;}
 151   1         else if (X==4)
 152   1           {X=0x98;}
 153   1         pos = X+Y ; 
 154   1       
 155   1         lcd_wcmd(pos);     //显示地址
 156   1      }
 157          /*********************************************************
 158          *                                                        *
 159          * 闪烁函数                                               *
 160          *                                                        *
 161          *********************************************************/
 162          void lcdflag() 
 163          {
 164   1         lcd_wcmd(0x08);   
 165   1         delay(400);
 166   1         lcd_wcmd(0x0c);   
 167   1         delay(400);
 168   1         lcd_wcmd(0x08);   
 169   1         delay(400);
 170   1         lcd_wcmd(0x0c);   
 171   1         delay(400);
 172   1         lcd_wcmd(0x08);   
 173   1         delay(200); 
 174   1         lcd_wcmd(0x0c);   
 175   1         delay(5);
 176   1         lcd_wcmd(0x01);   
 177   1         delay(5);
 178   1      }
C51 COMPILER V9.05   12864                                                                 06/21/2020 23:05:30 PAGE 4   

 179          /*********************************************************
 180          *                                                        *
 181          * 图形显示                                               *
 182          *                                                        *
 183          *********************************************************/
 184          void photodisplay(uchar *bmp)   
 185          { 
 186   1        uchar i,j;
 187   1      
 188   1        lcd_wcmd(0x34);        //写数据时,关闭图形显示
 189   1      
 190   1        for(i=0;i<32;i++)
 191   1        {
 192   2          lcd_wcmd(0x80+i);    //先写入水平坐标值
 193   2          lcd_wcmd(0x80);      //写入垂直坐标值
 194   2          for(j=0;j<16;j++)   //再写入两个8位元的数据    
 195   2          lcd_wdat(*bmp++);     
 196   2          delay1(1);
 197   2        }
 198   1      
 199   1        for(i=0;i<32;i++)
 200   1        { 
 201   2          lcd_wcmd(0x80+i);
 202   2          lcd_wcmd(0x88);
 203   2          for(j=0;j<16;j++)         
 204   2              lcd_wdat(*bmp++);    
 205   2              delay1(1);
 206   2        }
 207   1        lcd_wcmd(0x36);       //写完数据,开图形显示 
 208   1      }
 209          /*********************************************************
 210          *                                                        *
 211          * 清屏函数                                               *
 212          *                                                        *
 213          *********************************************************/
 214          void  clr_screen()
 215          {
 216   1         lcd_wcmd(0x34);      //扩充指令操作
 217   1         delay(5);    
 218   1         lcd_wcmd(0x30);      //基本指令操作
 219   1         delay(5); 
 220   1         lcd_wcmd(0x01);      //清屏 
 221   1         delay(5);     
 222   1      }
 223          /**********************************************************
 224          ; 显示字符表代码
 225          **********************************************************/
 226          void  bytecode()
 227          {
 228   1         uchar  s;
 229   1         clr_screen();          //清屏    
 230   1         lcd_wcmd(0x80);        //设置显示位置为第一行  
 231   1         for(s=0;s<16;s++)
 232   1         {
 233   2           lcd_wdat(0x30+s); 
 234   2         }
 235   1         lcd_wcmd(0x90);        //设置显示位置为第二行 
 236   1         for(s=0;s<16;s++)
 237   1         {
 238   2           lcd_wdat(0x40+s); 
 239   2         }
 240   1         lcd_wcmd(0x88);        //设置显示位置为第三行  
C51 COMPILER V9.05   12864                                                                 06/21/2020 23:05:30 PAGE 5   

 241   1         for(s=0;s<16;s++)
 242   1         {
 243   2           lcd_wdat(0x50+s); 
 244   2         }
 245   1         lcd_wcmd(0x98);       //设置显示位置为第四行   
 246   1         for(s=0;s<16;s++)
 247   1         {
 248   2           lcd_wdat(0x60+s); 
 249   2         }
 250   1      }
 251          /*********************************************************
 252          *                                                        *
 253          * 主函数                                                 *
 254          *                                                        *
 255          *********************************************************/
 256          void lcd12864Task()
 257          {
 258   1         uchar i;
 259   1         delay(100);                 //上电，等待稳定
 260   1         IO_init();                              //真对 IAP15W4K61S4  IO口初始化
*** WARNING C206 IN LINE 260 OF User\12864.c: 'IO_init': missing function-prototype
 261   1         lcd_init();                 //初始化LCD
 262   1      
 263   1           lcd_pos(1,0);             //设置显示位置为第一行
 264   1           for(i=0;i<16;i++)
 265   1           {
 266   2             lcd_wdat(DIS1[i]);
 267   2             delay(30);
 268   2           }
 269   1      
 270   1           lcd_pos(2,0);             //设置显示位置为第二行
 271   1           for(i=0;i<16;i++)
 272   1           {
 273   2             lcd_wdat(DIS2[i]);
 274   2             delay(30);
 275   2           }
 276   1           lcd_pos(3,0);             //设置显示位置为第三行
 277   1           for(i=0;i<16;i++)
 278   1           {
 279   2             lcd_wdat(DIS3[i]);
 280   2             delay(30);
 281   2           }
 282   1           lcd_pos(4,0);             //设置显示位置为第四行
 283   1           for(i=0;i<16;i++)
 284   1           {
 285   2             lcd_wdat(DIS4[i]);
 286   2             delay(30);
 287   2           }
 288   1      }
 289          /*********************************************************/
 290          
 291          
 292          
 293          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    670    ----
   CONSTANT SIZE    =     65    ----
   XDATA SIZE       =   ----       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.05   12864                                                                 06/21/2020 23:05:30 PAGE 6   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
