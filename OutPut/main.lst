C51 COMPILER V9.54   MAIN                                                                  07/05/2020 10:17:20 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\OutPut\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Source\main.c LARGE OPTIMIZE(8,SIZE) BROWSE DEBUG OBJECTEXTEND PRINT(.\O
                    -utPut\main.lst) TABS(2) OBJECT(.\OutPut\main.obj)

line level    source

   1          /* 本例程uCOS-II 版本为2.51*/  
   2          //#include <REG51.H>
   3          #include <STC15F2K60S2.H>
   4          #include "includes.h"
   5          #include <stdlib.h>
   6          #include <stdio.h>
   7          
   8          //运行灯
   9          sbit LED1 = P5^5;
  10          sbit LED2 = P4^2;
  11          
  12          sbit KEY1 = P2^2;
  13          sbit KEY2 = P2^1;
  14          sbit KEY3 = P2^0;
  15          sbit KEY4 = P3^0;
  16          sbit KEY5 = P3^1;
  17          sbit KEY6 = P3^2;
  18          sbit KEY7 = P3^3;
  19          sbit KEY8 = P3^4;
  20          sbit KEY9 = P3^5;
  21          
  22          sbit LCD_RS  =  P3^5;      //寄存器选择输入 
  23          sbit LCD_RW  =  P3^6;      //液晶读/写控制
  24          sbit LCD_EN  =  P3^7;      //液晶使能控制
  25          sbit LCD_PSB =  P4^6;      //串/并方式控制
  26          sbit LCD_RST =  P4^7;      //液晶复位端口
  27          
  28          typedef unsigned int uint;
  29          typedef unsigned char uchar;
  30          #define TRUE 1
  31          #define FALSE 0
  32          typedef enum {false , true } boolean;
  33          
  34          //定义任务堆栈
  35          OS_STK Task1Stk[MaxStkSize+1];      //注意：在ASM文件中设置?STACK空间为40H即64
  36          OS_STK Task2Stk[MaxStkSize+1];
  37          OS_STK Task3Stk[MaxStkSize+1];
  38          
  39          
  40          int i;
  41          
  42          sbit rw=P3^6;    //1602 IO口定义  这里用的数据口是P0口
  43          sbit rs=P3^5;
  44          sbit ep=P3^7;
  45          uchar bitmap[1024];//画布
  46          uchar code number58[]={//5*8 0123456789数字
  47            0x31,0x0C,0x61,0x3C,0xCF,0x31,0x80,0x4B,0x12,0x93,0x21,0x29,0x4A,0x40,0x49,0x02,
  48            0x13,0x21,0x01,0x4A,0x40,0x49,0x04,0x65,0x39,0xC2,0x31,0xC0,0x49,0x08,0x15,0x05,
  49            0x24,0x48,0x40,0x49,0x10,0x97,0x85,0x24,0x4A,0x40,0x33,0x9E,0x61,0x38,0xC4,0x31,
  50            0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  51          };
  52          uchar code mask1[]={0x80,0x40,0x20,0x10,0x8,0x4,0x2,0x1};//10000000 01000000 ~ 00000001
  53          uchar code mask2[]={0x7F,0xBF,0xDF,0xEF,0xF7,0xFB,0xFD,0xFE};//01111111 10111111 11011111
  54          uchar code mask3[]={0,0x80,0xC0,0xE0,0xF0,0xF8,0xFC,0xFE};//10000000 11000000 ~ 11111110
C51 COMPILER V9.54   MAIN                                                                  07/05/2020 10:17:20 PAGE 2   

  55          uchar code mask4[]={0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F};//00000001 00000011 ~ 01111111
  56          uchar code number69[]={//6*9 0123456789+-*/.%=-
  57            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x47,
  58            0x1C,0x09,0xE1,0x9F,0x38,0xE0,0x00,0x00,0x10,0x39,0x00,0x00,0x45,0xC0,0x82,0x19,
  59            0x02,0x01,0x45,0x11,0x00,0x44,0x20,0x2A,0x00,0x00,0x44,0x40,0x82,0x29,0x04,0x02,
  60            0x45,0x11,0x00,0x28,0x20,0x3C,0x78,0x00,0x44,0x41,0x0C,0x49,0xC7,0x82,0x38,0xF7,
  61            0xDF,0x10,0x40,0x0F,0x01,0xE0,0x44,0x42,0x02,0x48,0x24,0x44,0x44,0x11,0x00,0x28,
  62            0x40,0x15,0x78,0x00,0x44,0x44,0x02,0xFC,0x24,0x44,0x44,0x21,0x00,0x44,0x84,0x27,
  63            0x00,0x00,0x38,0x47,0x9C,0x09,0xC3,0x84,0x39,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,
  64            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  65          };
  66          uchar code author[]={
  67            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  68            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  69            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  70            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  71            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  72            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  73            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  74            0xE0,0x00,0x10,0x40,0x00,0x00,0x00,0x00,0x40,0x00,0x81,0x80,0x00,0x00,0x00,0x07,
  75            0xE0,0x00,0x70,0xE0,0x07,0xFF,0x81,0x80,0x60,0x03,0xC3,0xC0,0x1F,0x9F,0xC0,0x07,
  76            0xE0,0x01,0xFD,0xFC,0x06,0x01,0x81,0xC0,0x60,0x3F,0xF7,0xF8,0x30,0x98,0x40,0x07,
  77            0xE0,0x0F,0xB3,0x6F,0x87,0xFF,0x80,0x70,0x60,0x3B,0x19,0x4C,0x1F,0x9F,0xC0,0x07,
  78            0xE0,0x0E,0x40,0x03,0x02,0x01,0x80,0x00,0x60,0x03,0xFF,0xC0,0x1F,0xCD,0xC0,0x07,
  79            0xE0,0x00,0x67,0xFC,0x03,0xFF,0x84,0xCF,0xFF,0xC3,0xFF,0xC0,0x00,0x66,0x00,0x07,
  80            0xE0,0x01,0x90,0x0C,0x03,0x73,0x0F,0xCE,0x6F,0x83,0x00,0xC0,0x1F,0xFF,0xE0,0x07,
  81            0xE0,0x01,0x98,0x4C,0x01,0xDE,0x00,0xC0,0x61,0x03,0xFF,0xC0,0x01,0x98,0x00,0x07,
  82            0xE0,0x00,0x9F,0xCC,0x1F,0x33,0xF0,0xC0,0x60,0x01,0xFF,0xC0,0x07,0x0F,0x80,0x07,
  83            0xE0,0x00,0x98,0x4C,0x3C,0xE7,0xF0,0xC0,0x60,0x10,0xFF,0x80,0xFC,0x01,0xF8,0x07,
  84            0xE0,0x01,0x9F,0xCC,0x0F,0x8C,0x70,0xC8,0x60,0x3F,0xFF,0xFE,0xFF,0xDF,0xF8,0x07,
  85            0xE0,0x01,0x98,0x4C,0x00,0x70,0xE0,0xF0,0x60,0x20,0x63,0x1C,0x18,0xD8,0x90,0x07,
  86            0xE0,0x03,0x9F,0xCC,0x07,0xC1,0xC1,0xF0,0x60,0x00,0xC3,0x00,0x18,0x98,0x80,0x07,
  87            0xE0,0x07,0x00,0x0C,0xFE,0x1F,0x81,0xC0,0x60,0x07,0x83,0x00,0x1F,0x9F,0x80,0x07,
  88            0xE0,0x06,0x00,0x0C,0x00,0x06,0x00,0x00,0x60,0x07,0x03,0x00,0x00,0x00,0x00,0x07,
  89            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  90            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  91            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  92            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  93            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  94            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  95            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  96            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  97            0xE3,0xFE,0x22,0x89,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  98            0xE2,0x02,0x22,0x45,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  99            0xE2,0x22,0x47,0xE1,0x20,0x01,0xC2,0x1E,0x71,0xCF,0x9C,0x73,0xE2,0x1E,0x21,0xC7,
 100            0xE2,0xFA,0x94,0x81,0x7C,0x02,0x26,0x02,0x8A,0x28,0x22,0x8A,0x06,0x02,0x62,0x27,
 101            0xE2,0x22,0xEC,0x89,0x44,0x00,0x22,0x04,0x8A,0x28,0x22,0x8A,0x02,0x04,0x20,0x27,
 102            0xE3,0xFE,0x27,0xE5,0x7C,0x00,0xC2,0x04,0x12,0x2F,0x04,0x8B,0xC2,0x04,0x20,0xC7,
 103            0xE2,0x02,0x44,0x81,0x44,0x00,0x22,0x08,0x22,0x28,0x88,0x8A,0x22,0x08,0x20,0x27,
 104            0xE2,0xFA,0xF4,0x81,0x7C,0x00,0x22,0x08,0x42,0x20,0x90,0x88,0x22,0x08,0x20,0x27,
 105            0xE2,0x8A,0x07,0xE1,0x10,0x02,0x22,0x08,0x82,0x28,0xA0,0x8A,0x22,0x08,0x22,0x27,
 106            0xE2,0xFA,0x34,0x85,0x54,0x01,0xC7,0x08,0xF9,0xC7,0x3E,0x71,0xC7,0x08,0x71,0xC7,
 107            0xE4,0x02,0xC4,0x89,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 108            0xE8,0x0E,0x07,0xE2,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 109            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 110            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 111            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 112            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 113            0xE0,0x40,0x00,0x07,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 114            0xEF,0xFE,0x7F,0xC4,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 115            0xE1,0x50,0x40,0x47,0xFC,0x01,0xC2,0x1E,0x71,0xCF,0x9C,0x73,0xE2,0x1C,0x70,0x47,
 116            0xE2,0x48,0x7F,0xC4,0x04,0x02,0x26,0x02,0x8A,0x28,0x22,0x8A,0x06,0x22,0x88,0xC7,
C51 COMPILER V9.54   MAIN                                                                  07/05/2020 10:17:20 PAGE 3   

 117            0xEC,0x46,0x40,0x47,0xFC,0x00,0x22,0x04,0x8A,0x28,0x22,0x8A,0x02,0x22,0x88,0xC7,
 118            0xE3,0xF0,0x7F,0xC0,0x40,0x00,0xC2,0x04,0x12,0x2F,0x04,0x8B,0xC2,0x1C,0x89,0x47,
 119            0xE0,0x20,0x11,0x04,0x40,0x00,0x22,0x08,0x22,0x28,0x88,0x8A,0x22,0x22,0x8A,0x47,
 120            0xE0,0x40,0x91,0x27,0xFC,0x00,0x22,0x08,0x42,0x20,0x90,0x88,0x22,0x22,0x8B,0xE7,
 121            0xEF,0xFE,0x51,0x48,0x40,0x02,0x22,0x08,0x82,0x28,0xA0,0x8A,0x22,0x22,0x88,0x47,
 122            0xE0,0x40,0x31,0x83,0xF8,0x01,0xC7,0x08,0xF9,0xC7,0x3E,0x71,0xC7,0x1C,0x70,0xE7,
 123            0xE0,0x40,0x11,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 124            0xE1,0xC0,0xFF,0xEF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 125            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 126            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 127            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 128            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 129            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 130            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 131          };
 132          uchar code help[]={
 133            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 134            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 135            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 136            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 137            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 138            0xE0,0x00,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 139            0xE0,0x00,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 140            0xE0,0x00,0x2F,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 141            0xE0,0x00,0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 142            0xE0,0x00,0x6F,0xE0,0x00,0x3F,0xF8,0x7F,0xF0,0xFF,0xE1,0xFF,0xC3,0xFF,0x80,0x07,
 143            0xE0,0x00,0xA9,0x20,0x00,0x20,0x08,0x40,0x10,0x80,0x21,0x00,0x42,0x00,0x80,0x07,
 144            0xE0,0x00,0x2F,0xE0,0x00,0x23,0xC8,0x43,0x10,0x86,0x21,0x00,0x42,0x00,0x80,0x07,
 145            0xE0,0x00,0x29,0x00,0x00,0x22,0x48,0x44,0x90,0x89,0x21,0x08,0x42,0x10,0x80,0x07,
 146            0xE0,0x00,0x25,0x00,0x00,0x20,0x48,0x44,0x90,0x89,0x21,0x00,0x42,0x20,0x80,0x07,
 147            0xE0,0x00,0x22,0x00,0x00,0x20,0x88,0x43,0x10,0x87,0x21,0x3E,0x42,0x7E,0x80,0x07,
 148            0xE0,0x00,0x25,0x80,0x00,0x21,0x08,0x44,0x90,0x81,0x21,0x00,0x42,0x20,0x80,0x07,
 149            0xE0,0x00,0x28,0x60,0x00,0x21,0x08,0x44,0x90,0x89,0x21,0x08,0x42,0x10,0x80,0x07,
 150            0xE0,0x00,0x00,0x00,0x00,0x21,0x08,0x43,0x10,0x86,0x21,0x00,0x42,0x00,0x80,0x07,
 151            0xE0,0x00,0x3F,0xE0,0x00,0x20,0x08,0x40,0x10,0x80,0x21,0x00,0x42,0x00,0x80,0x07,
 152            0xE0,0x00,0x22,0x20,0x00,0x3F,0xF8,0x7F,0xF0,0xFF,0xE1,0xFF,0xC3,0xFF,0x80,0x07,
 153            0xE0,0x00,0x22,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 154            0xE0,0x00,0x3F,0xE0,0x00,0x3F,0xF8,0x7F,0xF0,0xFF,0xE1,0xFF,0xC3,0xFF,0x80,0x07,
 155            0xE0,0x00,0x22,0x20,0x00,0x20,0x08,0x40,0x10,0x80,0x21,0x00,0x42,0x00,0x80,0x07,
 156            0xE0,0x00,0x22,0x20,0x00,0x20,0x88,0x47,0x90,0x86,0x21,0x00,0x42,0x38,0x80,0x07,
 157            0xE0,0x00,0x3F,0xE0,0x00,0x21,0x88,0x44,0x10,0x89,0x21,0x22,0x42,0x44,0x80,0x07,
 158            0xE0,0x00,0x22,0x20,0x00,0x21,0x88,0x44,0x10,0x88,0x21,0x14,0x42,0x44,0x80,0x07,
 159            0xE0,0x00,0x22,0x20,0x00,0x22,0x88,0x47,0x10,0x8E,0x21,0x08,0x42,0x08,0x80,0x07,
 160            0xE0,0x00,0x22,0x20,0x00,0x22,0x88,0x40,0x90,0x89,0x21,0x14,0x42,0x10,0x80,0x07,
 161            0xE0,0x00,0x40,0xE0,0x00,0x23,0xC8,0x40,0x90,0x89,0x21,0x22,0x42,0x00,0x80,0x07,
 162            0xE0,0x00,0x00,0x00,0x00,0x20,0x88,0x47,0x10,0x86,0x21,0x00,0x42,0x10,0x80,0x07,
 163            0xE0,0x00,0x24,0x20,0x00,0x20,0x08,0x40,0x10,0x80,0x21,0x00,0x42,0x00,0x80,0x07,
 164            0xE0,0x00,0x12,0x40,0x00,0x3F,0xF8,0x7F,0xF0,0xFF,0xE1,0xFF,0xC3,0xFF,0x80,0x07,
 165            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 166            0xE0,0x00,0x07,0xE0,0x00,0x3F,0xF8,0x7F,0xF0,0xFF,0xE1,0xFF,0xC3,0xFF,0x80,0x07,
 167            0xE0,0x00,0x64,0x20,0x00,0x20,0x08,0x40,0x10,0x80,0x21,0x00,0x42,0x00,0x80,0x07,
 168            0xE0,0x00,0x24,0x20,0x00,0x21,0x08,0x43,0x10,0x86,0x21,0x00,0x42,0xE0,0x80,0x07,
 169            0xE0,0x00,0x24,0x20,0x00,0x23,0x08,0x44,0x90,0x89,0x21,0x00,0x42,0xA4,0x80,0x07,
 170            0xE0,0x00,0x27,0xE0,0x00,0x21,0x08,0x40,0x90,0x81,0x21,0x00,0x42,0xE8,0x80,0x07,
 171            0xE0,0x00,0x2A,0x40,0x00,0x21,0x08,0x41,0x10,0x86,0x21,0x3E,0x42,0x10,0x80,0x07,
 172            0xE0,0x00,0x32,0x40,0x00,0x21,0x08,0x42,0x10,0x81,0x21,0x00,0x42,0x2E,0x80,0x07,
 173            0xE0,0x00,0x24,0x50,0x00,0x21,0x08,0x44,0x10,0x89,0x21,0x00,0x42,0x4A,0x80,0x07,
 174            0xE0,0x00,0x08,0x30,0x00,0x23,0x88,0x47,0x90,0x86,0x21,0x00,0x42,0x0E,0x80,0x07,
 175            0xE0,0x00,0x00,0x00,0x00,0x20,0x08,0x40,0x10,0x80,0x21,0x00,0x42,0x00,0x80,0x07,
 176            0xE0,0x00,0x00,0x00,0x00,0x3F,0xF8,0x7F,0xF0,0xFF,0xE1,0xFF,0xC3,0xFF,0x80,0x07,
 177            0xE0,0x00,0x7D,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 178            0xE0,0x00,0x45,0x10,0x00,0x3F,0xF8,0x7F,0xF0,0xFF,0xE1,0xFF,0xC3,0xFF,0x80,0x07,
C51 COMPILER V9.54   MAIN                                                                  07/05/2020 10:17:20 PAGE 4   

 179            0xE0,0x00,0x45,0x10,0x00,0x20,0x08,0x40,0x10,0x80,0x21,0x00,0x42,0x00,0x80,0x07,
 180            0xE0,0x00,0x45,0xF0,0x00,0x20,0x08,0x43,0x10,0x80,0x21,0x00,0x42,0x00,0x80,0x07,
 181            0xE0,0x00,0x7D,0x10,0x00,0x24,0x68,0x44,0x90,0x80,0x21,0x08,0x42,0x00,0x80,0x07,
 182            0xE0,0x00,0x45,0x10,0x00,0x2A,0x88,0x44,0x90,0x80,0x21,0x08,0x42,0x00,0x80,0x07,
 183            0xE0,0x00,0x45,0xF0,0x00,0x2E,0x88,0x44,0x90,0x80,0x21,0x3E,0x42,0x3C,0x80,0x07,
 184            0xE0,0x00,0x45,0x10,0x00,0x2A,0x88,0x44,0x90,0x8C,0x21,0x08,0x42,0x00,0x80,0x07,
 185            0xE0,0x00,0x7D,0x10,0x00,0x2A,0x68,0x44,0x90,0x8C,0x21,0x08,0x42,0x3C,0x80,0x07,
 186            0xE0,0x00,0x41,0x10,0x00,0x20,0x08,0x43,0x10,0x80,0x21,0x00,0x42,0x00,0x80,0x07,
 187            0xE0,0x00,0x02,0x10,0x00,0x20,0x08,0x40,0x10,0x80,0x21,0x00,0x42,0x00,0x80,0x07,
 188            0xE0,0x00,0x04,0x70,0x00,0x3F,0xF8,0x7F,0xF0,0xFF,0xE1,0xFF,0xC3,0xFF,0x80,0x07,
 189            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 190            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 191            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 192            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 193            0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
 194            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 195            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 196            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 197          };
 198          uchar value1[20];
 199          uchar value2[20];
 200          long double value;//左值 右值 结果
 201          uchar status;
 202          uchar operator;//操作符 对应symbol //6*9 0123456789+-*/.%=-
 203          void cls_bitmap(){
 204   1        int i;
 205   1        for(i=0;i<1024;i++)bitmap[i]=0;
 206   1      }
 207          void delay_fast(unsigned int ii){
 208   1        while(ii-->0)_nop_();
 209   1      }
 210          void _nop_ (void);
 211          #define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
 212          bit lcd_busy(){
 213   1        bit result;
 214   1        LCD_RS = 0;
 215   1        LCD_RW = 1;
 216   1        LCD_EN = 1;
 217   1        delayNOP();
 218   1        result = (bit)(P0&0x80);
 219   1        LCD_EN = 0;
 220   1        return result; 
 221   1      }
 222          void lcd_wcmd(uchar cmd){
 223   1        while(lcd_busy());
 224   1        LCD_RS = 0;
 225   1        LCD_RW = 0;
 226   1        LCD_EN = 0;
 227   1        _nop_();
 228   1        _nop_(); 
 229   1        P0 = cmd;
 230   1        delayNOP();
 231   1        LCD_EN = 1;
 232   1        delayNOP();
 233   1        LCD_EN = 0;  
 234   1      }
 235          void lcd_wdat(uchar dat){
 236   1        while(lcd_busy());
 237   1        LCD_RS = 1;
 238   1        LCD_RW = 0;
 239   1        LCD_EN = 0;
 240   1        P0 = dat;
C51 COMPILER V9.54   MAIN                                                                  07/05/2020 10:17:20 PAGE 5   

 241   1        delayNOP();
 242   1        LCD_EN = 1;
 243   1        delayNOP();
 244   1        LCD_EN = 0; 
 245   1      }
 246          void lcd_init(){
 247   1        LCD_PSB = 1;//并口方式
 248   1        LCD_RST = 0;//液晶复位
 249   1        LCD_RST = 1;
 250   1        lcd_wcmd(0x34);      //扩充指令操作
 251   1        delay_fast(15);
 252   1        lcd_wcmd(0x30);      //基本指令操作
 253   1        delay_fast(15);
 254   1        lcd_wcmd(0x0C);      //显示开，关光标
 255   1        delay_fast(15);
 256   1        lcd_wcmd(0x01);      //清除LCD的显示内容
 257   1      }
 258          void lcd_Clear() reentrant{//清屏
 259   1        lcd_wcmd(0x34);
 260   1        delay_fast(15);
 261   1        lcd_wcmd(0x30);
 262   1        delay_fast(15);
 263   1        lcd_wcmd(0x01);
 264   1        delay_fast(15);
 265   1      }
 266          void FullRender(uchar* bmp) reentrant{
 267   1        uchar i,j;
 268   1        int n=0;
 269   1        delay_fast(15);
 270   1        lcd_wcmd(0x34);
 271   1        for(i=0;i<32;i++){
 272   2          lcd_wcmd(0x80+i);
 273   2          lcd_wcmd(0x80);
 274   2          for(j=0;j<16;j++)lcd_wdat(bmp[n++]);
 275   2          delay_fast(15);
 276   2        }
 277   1        for(i=0;i<32;i++)
 278   1        { 
 279   2          lcd_wcmd(0x80+i);
 280   2          lcd_wcmd(0x88);
 281   2          for(j=0;j<16;j++)lcd_wdat(bmp[n++]);
 282   2          delay_fast(15);
 283   2        }
 284   1        lcd_wcmd(0x36);
 285   1      }
 286          //喂狗 硬件看门狗
 287          void Feed_WDT(void) reentrant{
 288   1        WDT_CONTR = 0x3f; //EN_WDT=1,CLR_WDT=1,IDLE_WDT=0,PS2=0,PS1=0,PS0=0
 289   1        H_DOG = ~H_DOG;
 290   1      }
 291          boolean isDouble(uchar* ch){//是不是小数
 292   1        int i;
 293   1        for(i=0;i<20;i++)
 294   1          if(ch[i]=='.')return true;
 295   1        return false;
 296   1      }
 297          void init_caculator(){//初始化计算器 清空计算器
 298   1        uint i;
 299   1        for(i=0;i<20;i++)
 300   1          value1[i]=value2[i]=0;//左值 右值
 301   1        value=0;//结果
 302   1        operator=0;//操作符
C51 COMPILER V9.54   MAIN                                                                  07/05/2020 10:17:20 PAGE 6   

 303   1        status=1;
 304   1        //0计算器没准备好
 305   1        //1计算器准备好了 请输入左值 此时也可以按符号
 306   1        //2请输入右值 此时可以按等于
 307   1        //3结果已出
 308   1      }
 309          void drawPixel(uchar x,uchar y,boolean result){
 310   1        if(result){
 311   2          bitmap[16*y+x/8]|=mask1[x%8];
 312   2        }else
 313   1          bitmap[16*y+x/8]&=mask2[x%8];
 314   1      }
 315          void drawOneSymbol(uchar symbol,uint x,uint y){//画一个符号 //6*9 0123456789+-*/.%=-
 316   1        int i,j,n,offset;
 317   1        for(j=0;j<9;j++)//列
 318   1          for(i=0;i<6;i++){//行
 319   2            n=(symbol*6+i)/8+j*14;//14=18*6/8+1 18代表一共18字符 18*6代表总宽度 /8代表字节 +1代表后面补0
 320   2            offset=(symbol*6+i)%8;
 321   2            if((number69[n]&mask1[offset])>>(7-offset))
 322   2              drawPixel(x+i,y+j,1);
 323   2            else
 324   2              drawPixel(x+i,y+j,0);
 325   2          }
 326   1      }
 327          void drawNumber(unsigned long number,uint x,uint y) reentrant{
 328   1        unsigned long n;
 329   1        int count=0;
 330   1        n=number;
 331   1        do{
 332   2          n/=10;
 333   2          count++;
 334   2        }while(n!=0);
 335   1        n=number;
 336   1        while(count-->0){
 337   2          drawOneSymbol(n%10,x+5*count,y);
 338   2          n/=10;
 339   2        }
 340   1      }
 341          void drawChar(uchar* ch,uint x,uint y){//画字符数组
 342   1        int i,pos=0;//6*9char
 343   1        for(i=0;i<20;i++)
 344   1          switch(ch[i]){
 345   2            case 0:
 346   2              return;//没有了
 347   2            case '0':
 348   2              drawOneSymbol(0,x+pos*6,y);
 349   2              pos++;
 350   2              break;
 351   2            case '1':
 352   2              drawOneSymbol(1,x+pos*6,y);
 353   2              pos++;
 354   2              break;
 355   2            case '2':
 356   2              drawOneSymbol(2,x+pos*6,y);
 357   2              pos++;
 358   2              break;
 359   2            case '3':
 360   2              drawOneSymbol(3,x+pos*6,y);
 361   2              pos++;
 362   2              break;
 363   2            case '4':
 364   2              drawOneSymbol(4,x+pos*6,y);
C51 COMPILER V9.54   MAIN                                                                  07/05/2020 10:17:20 PAGE 7   

 365   2              pos++;
 366   2              break;
 367   2            case '5':
 368   2              drawOneSymbol(5,x+pos*6,y);
 369   2              pos++;
 370   2              break;
 371   2            case '6':
 372   2              drawOneSymbol(6,x+pos*6,y);
 373   2              pos++;
 374   2              break;
 375   2            case '7':
 376   2              drawOneSymbol(7,x+pos*6,y);
 377   2              pos++;
 378   2              break;
 379   2            case '8':
 380   2              drawOneSymbol(8,x+pos*6,y);
 381   2              pos++;
 382   2              break;
 383   2            case '9':
 384   2              drawOneSymbol(9,x+pos*6,y);
 385   2              pos++;
 386   2              break;
 387   2            case '-'://负号
 388   2              drawOneSymbol(17,x+pos*6,y);
 389   2              pos++;
 390   2              break;
 391   2            case '.'://小数点
 392   2              drawOneSymbol(14,x+pos*6,y);
 393   2              pos++;
 394   2              break;
 395   2          }
 396   1      }
 397          void Task1(void *ppdata) reentrant{
 398   1        ET0 = 1;       //根任务开时钟节拍中断 重要！！！！！！！！！！！！！！！！！！！！！！！！
 399   1        for(;;){
 400   2          OSTimeDly(OS_TICKS_PER_SEC);  //延时2s
 401   2          //LED2=~LED2;
 402   2        }
 403   1      }
*** WARNING C280 IN LINE 397 OF Source\main.c: 'ppdata': unreferenced local variable
 404          
 405          void Task2(void *ppdata) reentrant{
 406   1        for(;;){
 407   2          OSTimeDly(OS_TICKS_PER_SEC);
 408   2          Feed_WDT();
 409   2        }    
 410   1      }
*** WARNING C280 IN LINE 405 OF Source\main.c: 'ppdata': unreferenced local variable
 411          void doubleToStr(long double value,uchar* result){
 412   1        uchar tempBuffer[200];//防止缓冲区溢出
 413   1        for(i=0;i<200;i++)tempBuffer[i]=0;
 414   1        sprintf(tempBuffer,"%.15f",value);
 415   1        for(i=0;i<20;i++)result[i]=tempBuffer[i];
 416   1        for(i=19;i>=0;i--){
 417   2          if(result[i]==0)
 418   2            continue;
 419   2          else if(result[i]=='0')
 420   2            result[i]=0;
 421   2          else if(result[i]=='.'){
 422   3            result[i]=0;break;
 423   3          }else
 424   2            break;
C51 COMPILER V9.54   MAIN                                                                  07/05/2020 10:17:20 PAGE 8   

 425   2        }
 426   1      }
 427          void render() reentrant{//渲染一页
 428   1        uchar result[20];
 429   1        cls_bitmap();
 430   1        lcd_Clear();
 431   1        LED1=~LED1;
 432   1        if(value1[0]==0)//说明没输入
 433   1          drawOneSymbol(0,10,10);
 434   1        else
 435   1          drawChar(&value1,10,10);
 436   1        if(operator!=0){
 437   2          drawOneSymbol(operator,10,23);//显示操作符
 438   2          if(value2[0]==0)//说明没输入
 439   2            drawOneSymbol(0,10,36);
 440   2          else
 441   2            drawChar(&value2,10,36);//显示右值
 442   2        }
 443   1        if(status==3){
 444   2          drawOneSymbol(16,10,50);//等于符号
 445   2          doubleToStr(value,result);
 446   2          if(result[0]==0)//说明没输入
 447   2            drawOneSymbol(0,20,50);
 448   2          else
 449   2            drawChar(&result,20,50);//显示右值
 450   2          
 451   2        }
 452   1        FullRender(&bitmap);
 453   1      }
 454          boolean inputNumber(uint status,char ch){
 455   1        uint i;
 456   1        if(status==1){
 457   2          if(ch=='0')if(value1[0]==0||(value1[0]=='-'&&value1[1]==0))return true;//没输入不允许按0
 458   2          if(ch=='.'&&(value1[0]=='-'&&value1[1]==0))value1[1]='0';
 459   2          if(ch=='.'&&value1[0]==0)value1[0]='0';//输入小数点 但没输入任何东西 前面要补0
 460   2          if(ch=='.'&&isDouble(value1))return true;//已经输入过小数点了
 461   2          for(i=0;i<20;i++){
 462   3            if(value1[i]==0){
 463   4              value1[i]=ch;
 464   4              return true;
 465   4            }
 466   3          }
 467   2        }else if(status==2){
 468   2          if(ch=='0')if(value1[0]==0||(value1[0]=='-'&&value1[1]==0))return true;//没输入不允许按0
 469   2          if(ch=='.'&&(value2[0]=='-'&&value2[1]==0))value2[1]='0';
 470   2          if(ch=='.'&&value2[0]==0)value2[0]='0';//输入小数点 但没输入任何东西 前面要补0
 471   2          if(ch=='.'&&isDouble(value2))return true;//已经输入过小数点了
 472   2          for(i=0;i<20;i++){
 473   3            if(value2[i]==0){
 474   4              value2[i]=ch;
 475   4              return true;
 476   4            }
 477   3          }
 478   2        }
 479   1        return false;
 480   1      }
 481          void DelNumber(uint status){
 482   1        uint i;
 483   1        if(status==1){
 484   2          for(i=1;i<20;i++)
 485   2            if(value1[i]==0){
 486   3              value1[i-1]=0;
C51 COMPILER V9.54   MAIN                                                                  07/05/2020 10:17:20 PAGE 9   

 487   3              return;
 488   3            }
 489   2          value1[19]=0;
 490   2        }else if(status==2){
 491   2          for(i=1;i<20;i++)
 492   2            if(value2[i]==0){
 493   3              value2[i-1]=0;
 494   3              return;
 495   3            }
 496   2          value2[19]=0;
 497   2        }
 498   1      }
 499          void caculator(){//6*9 0123456789+-*/.%=-
 500   1        //uchar* ch1,uchar* ch2,uint operator
 501   1        switch(operator){
 502   2          case 10://加法
 503   2            value=atof(value1)+atof(value2);
 504   2            break;
 505   2          case 11://减法
 506   2            value=atof(value1)-atof(value2);
 507   2            break;
 508   2          case 12://乘
 509   2            value=atof(value1)*atof(value2);
 510   2            break;
 511   2          case 13://除
 512   2            value=atof(value1)/atof(value2);
 513   2            break;
 514   2          case 15://取余
 515   2            value=(int)atof(value1)%(int)atof(value2);
 516   2            break;
 517   2          case 16://等于
 518   2            value=atof(value1);
 519   2            break;
 520   2          default:
 521   2            value=-99;
 522   2        }
 523   1        status=3;
 524   1      }
 525          void scan() reentrant{
 526   1        long double result,result2;
 527   1        uchar operat;
 528   1        if(status==0)return;//计算器没准备好
 529   1        KEY6=0;
 530   1        KEY7=1;
 531   1        KEY8=1;
 532   1        KEY9=1;
 533   1        if(KEY1==0){//(1,5)//删除一个字符
 534   2          delay_fast(10);if(KEY1!=0)return;while(KEY1==0)OSTimeDly(1);//消除抖动 等待松开
 535   2          if(status==1||status==2)DelNumber(status);
 536   2          if(status==3)init_caculator();
 537   2          render();
 538   2        }
 539   1        if(KEY2==0){//(1,4)//除法
 540   2          delay_fast(10);if(KEY2!=0)return;while(KEY2==0)OSTimeDly(1);
 541   2          if(status==1){//按了之后准备按右值
 542   3            operator=13;status=2;
 543   3          }else if(status==2){//计算结果，并将结果放左值 并设置操作符
 544   3            if(value2[0]==0){
 545   4              operator=13;
 546   4            }else{
 547   4              caculator();//计算结果
 548   4              result=value;//结果：value
C51 COMPILER V9.54   MAIN                                                                  07/05/2020 10:17:20 PAGE 10  

 549   4              init_caculator();
 550   4              operator=13;
 551   4              doubleToStr(result,value1);
 552   4              status=2;
 553   4            }
 554   3          }else if(status==3){//将计算结果放入左值
 555   3            result=value;//结果：value
 556   3            init_caculator();
 557   3            operator=13;
 558   3            doubleToStr(result,value1);
 559   3            status=2;
 560   3          }
 561   2          render();
 562   2        }
 563   1        if(KEY3==0){//(1,3)//9
 564   2          delay_fast(10);if(KEY3!=0)return;while(KEY3==0)OSTimeDly(1);
 565   2          if(status==3)init_caculator();
 566   2          if(status==1||status==2){//输入左值或右值
 567   3            inputNumber(status,'9');
 568   3          }
 569   2          render();
 570   2        }
 571   1        if(KEY4==0){//(1,2)//8
 572   2          delay_fast(10);if(KEY4!=0)return;while(KEY4==0)OSTimeDly(1);
 573   2          if(status==3)init_caculator();
 574   2          if(status==1||status==2){//输入左值或右值
 575   3            inputNumber(status,'8');
 576   3          }
 577   2          render();
 578   2        }
 579   1        if(KEY5==0){//(1,1)//7
 580   2          delay_fast(10);if(KEY5!=0)return;while(KEY5==0)OSTimeDly(1);
 581   2          if(status==3)init_caculator();
 582   2          if(status==1||status==2){//输入左值或右值
 583   3            inputNumber(status,'7');
 584   3          }
 585   2          render();
 586   2        }
 587   1        KEY6=1;
 588   1        KEY7=0;
 589   1        KEY8=1;
 590   1        KEY9=1;
 591   1        if(KEY1==0){//(2,5)//空
 592   2          FullRender(&help);
 593   2          delay_fast(10);if(KEY1!=0)return;while(KEY1==0)OSTimeDly(1);//消除抖动 等待松开
 594   2          if(status==3)init_caculator();
 595   2          render();
 596   2        }
 597   1        if(KEY2==0){//(2,4)//乘法
 598   2          delay_fast(10);if(KEY2!=0)return;while(KEY2==0)OSTimeDly(1);
 599   2          if(status==1){//按了之后准备按右值
 600   3            operator=12;status=2;
 601   3          }else if(status==2){//计算结果，并将结果放左值 并设置操作符
 602   3            if(value2[0]==0){
 603   4              operator=12;
 604   4            }else{
 605   4              caculator();//计算结果
 606   4              result=value;//结果：value
 607   4              init_caculator();
 608   4              operator=12;
 609   4              doubleToStr(result,value1);
 610   4              status=2;
C51 COMPILER V9.54   MAIN                                                                  07/05/2020 10:17:20 PAGE 11  

 611   4            }
 612   3          }else if(status==3){//将计算结果放入左值
 613   3            result=value;//结果：value
 614   3            init_caculator();
 615   3            operator=12;
 616   3            doubleToStr(result,value1);
 617   3            status=2;
 618   3          }
 619   2          render();
 620   2        }
 621   1        if(KEY3==0){//(2,3)//6
 622   2          delay_fast(10);if(KEY3!=0)return;while(KEY3==0)OSTimeDly(1);
 623   2          if(status==3)init_caculator();
 624   2          if(status==1||status==2){//输入左值或右值
 625   3            inputNumber(status,'6');
 626   3          }
 627   2          render();
 628   2          
 629   2        }
 630   1        if(KEY4==0){//(2,2)//5
 631   2          delay_fast(10);if(KEY4!=0)return;while(KEY4==0)OSTimeDly(1);
 632   2          if(status==3)init_caculator();
 633   2          if(status==1||status==2){//输入左值或右值
 634   3            inputNumber(status,'5');
 635   3          }
 636   2          render();
 637   2        }
 638   1        if(KEY5==0){//(2,1)//4
 639   2          delay_fast(10);if(KEY5!=0)return;while(KEY5==0)OSTimeDly(1);
 640   2          if(status==3)init_caculator();
 641   2          if(status==1||status==2){//输入左值或右值
 642   3            inputNumber(status,'4');
 643   3          }
 644   2          render();
 645   2        }
 646   1        KEY6=1;
 647   1        KEY7=1;
 648   1        KEY8=0;
 649   1        KEY9=1;
 650   1        if(KEY1==0){//(3,5)//取余
 651   2          delay_fast(10);if(KEY1!=0)return;while(KEY1==0)OSTimeDly(1);//消除抖动 等待松开
 652   2          if(status==1){//按了之后准备按右值
 653   3            operator=15;status=2;
 654   3          }else if(status==2){//计算结果，并将结果放左值 并设置操作符
 655   3            if(value2[0]==0){
 656   4              operator=15;
 657   4            }else{
 658   4              caculator();//计算结果
 659   4              result=value;//结果：value
 660   4              init_caculator();
 661   4              operator=15;
 662   4              doubleToStr(result,value1);
 663   4              status=2;
 664   4            }
 665   3          }else if(status==3){//将计算结果放入左值
 666   3            result=value;//结果：value
 667   3            init_caculator();
 668   3            operator=15;
 669   3            doubleToStr(result,value1);
 670   3            status=2;
 671   3          }
 672   2          render();
C51 COMPILER V9.54   MAIN                                                                  07/05/2020 10:17:20 PAGE 12  

 673   2        }
 674   1        if(KEY2==0){//(3,4)//减法或 负号
 675   2          delay_fast(10);if(KEY2!=0)return;while(KEY2==0)OSTimeDly(1);
 676   2          if(status==1){//按了之后准备按右值
 677   3            if(value1[0]=='-'&&value1[1]==0){//之前有负号那清除
 678   4              value1[0]=0;
 679   4            }else if(value1[0]==0){//没有左值
 680   4              value1[0]='-';//负号
 681   4            }else{
 682   4              operator=11;status=2;
 683   4            }
 684   3          }else if(status==2){//计算结果，并将结果放左值 并设置操作符
 685   3            if(value2[0]==0){
 686   4              operator=11;
 687   4            }else{
 688   4              caculator();//计算结果
 689   4              result=value;//结果：value
 690   4              init_caculator();
 691   4              operator=11;
 692   4              doubleToStr(result,value1);
 693   4              status=2;
 694   4            }
 695   3          }else if(status==3){//将计算结果放入左值
 696   3            result=value;//结果：value
 697   3            init_caculator();
 698   3            operator=11;
 699   3            doubleToStr(result,value1);
 700   3            status=2;
 701   3          }
 702   2          render();
 703   2        }
 704   1        if(KEY3==0){//(3,3)//3
 705   2          delay_fast(10);if(KEY3!=0)return;while(KEY3==0)OSTimeDly(1);
 706   2          if(status==3)init_caculator();
 707   2          if(status==1||status==2){//输入左值或右值
 708   3            inputNumber(status,'3');
 709   3          }
 710   2          render();
 711   2        }
 712   1        if(KEY4==0){//(3,2)//2
 713   2          delay_fast(10);if(KEY4!=0)return;while(KEY4==0)OSTimeDly(1);
 714   2          if(status==3)init_caculator();
 715   2          if(status==1||status==2){//输入左值或右值
 716   3            inputNumber(status,'2');
 717   3          }
 718   2          render();
 719   2          
 720   2        }
 721   1        if(KEY5==0){//(3,1)//1
 722   2          delay_fast(10);if(KEY5!=0)return;while(KEY5==0)OSTimeDly(1);
 723   2          if(status==3)init_caculator();
 724   2          if(status==1||status==2){//输入左值或右值
 725   3            inputNumber(status,'1');
 726   3          }
 727   2          render();
 728   2        }
 729   1        KEY6=1;
 730   1        KEY7=1;
 731   1        KEY8=1;
 732   1        KEY9=0;
 733   1        if(KEY1==0){//(4,5)//等于
 734   2          delay_fast(10);if(KEY1!=0)return;while(KEY1==0)OSTimeDly(1);//消除抖动 等待松开
C51 COMPILER V9.54   MAIN                                                                  07/05/2020 10:17:20 PAGE 13  

 735   2          if(status==1){
 736   3            if(value1[0]==0)return;
 737   3            operator=16;
 738   3            caculator();
 739   3          }else if(status==2){//输入左值或右值
 740   3            if(value2[0]==0)return;//没输入右值不允许计算结果
 741   3            caculator();
 742   3          }else if(status==3){
 743   3            //结果已出
 744   3            result=value;//结果：value
 745   3            result2=atof(value2);
 746   3            operat=operator;
 747   3            init_caculator();
 748   3            operator=operat;
 749   3            doubleToStr(result,value1);//结果当左值
 750   3            doubleToStr(result2,value2);//右值
 751   3            caculator();
 752   3          }
 753   2          render();
 754   2        }
 755   1        if(KEY2==0){//(4,4)//加法
 756   2          delay_fast(10);if(KEY2!=0)return;while(KEY2==0)OSTimeDly(1);
 757   2          if(status==1){//按了之后准备按右值
 758   3            operator=10;status=2;
 759   3          }else if(status==2){//计算结果，并将结果放左值 并设置操作符
 760   3            if(value2[0]==0){
 761   4              operator=10;
 762   4            }else{
 763   4              caculator();//计算结果
 764   4              result=value;//结果：value
 765   4              init_caculator();
 766   4              operator=10;
 767   4              doubleToStr(result,value1);
 768   4              status=2;
 769   4            }
 770   3          }else if(status==3){//将计算结果放入左值
 771   3            result=value;//结果：value
 772   3            init_caculator();
 773   3            operator=10;
 774   3            doubleToStr(result,value1);
 775   3            status=2;
 776   3          }
 777   2          render();
 778   2        }
 779   1        if(KEY3==0){//(4,3)//小数点
 780   2          delay_fast(10);if(KEY3!=0)return;while(KEY3==0)OSTimeDly(1);
 781   2          if(status==3)init_caculator();
 782   2          if(status==1||status==2){//输入左值或右值
 783   3            inputNumber(status,'.');
 784   3          }
 785   2          render();
 786   2        }
 787   1        if(KEY4==0){//(4,2)//0
 788   2          delay_fast(10);if(KEY4!=0)return;while(KEY4==0)OSTimeDly(1);
 789   2          if(status==3)init_caculator();
 790   2          if(status==1||status==2){//输入左值或右值
 791   3            inputNumber(status,'0');
 792   3          }
 793   2          render();
 794   2        }
 795   1        if(KEY5==0){//(4,1)//清空所有
 796   2          delay_fast(10);if(KEY5!=0)return;while(KEY5==0)OSTimeDly(1);
C51 COMPILER V9.54   MAIN                                                                  07/05/2020 10:17:20 PAGE 14  

 797   2          init_caculator();
 798   2          render();
 799   2        }
 800   1      }
 801          
 802          void Task3(void *ppdata) reentrant{
 803   1        //lcd_Clear();
 804   1        FullRender(&author);
 805   1        OSTimeDly(OS_TICKS_PER_SEC*2);
 806   1        FullRender(&help);
 807   1        OSTimeDly(OS_TICKS_PER_SEC*2);
 808   1        init_caculator();
 809   1        render();
 810   1        for(;;){
 811   2          scan();
 812   2      
 813   2          //LED1=~LED1;
 814   2          //LED2=~LED2;
 815   2          OSTimeDly(OS_TICKS_PER_SEC/10);
 816   2        }    
 817   1      }
*** WARNING C280 IN LINE 802 OF Source\main.c: 'ppdata': unreferenced local variable
 818          
 819          void main(void){
 820   1        OSInit();
 821   1        //定时器初始化
 822   1        TMOD &= 0xF0;TMOD |= 0x01;TR0 = 1;
 823   1        //芯片IO口初始化
 824   1        P0M0 = 0X00;P0M1 = 0X00;P1M0 = 0X00;P1M1 = 0X00;P2M0 = 0X00;P2M1 = 0X00;P3M0 = 0X00;P3M1 = 0X00;P4M0 = 0X
             -00;P4M1 = 0X00;
 825   1        //LCD12864初始化
 826   1        lcd_init();
 827   1        //LCD12864清屏
 828   1        lcd_Clear();
 829   1        //狗饿了，喂狗
 830   1        Feed_WDT();
 831   1        //初始化画布
 832   1        cls_bitmap();
 833   1        OSTaskCreate(Task1,(void*)0,&Task1Stk[0],0);  //优先级
 834   1        OSTaskCreate(Task2,(void*)0,&Task2Stk[0],1);
 835   1        OSTaskCreate(Task3,(void*)0,&Task3Stk[0],2);
 836   1        OSStart();
 837   1      }
*** WARNING C294 IN LINE 403 OF Source\main.c: unreachable code
*** WARNING C294 IN LINE 410 OF Source\main.c: unreachable code
*** WARNING C294 IN LINE 817 OF Source\main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4832    ----
   CONSTANT SIZE    =   2268    ----
   XDATA SIZE       =   1267     237
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  6 WARNING(S),  0 ERROR(S)
